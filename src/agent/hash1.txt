commit f99ec30b1ed6b4ebd0978c979a6a922dcdb35f24
Author: Prasad Bhosale <prasad.bhosale@codeastu.com>
Date:   Fri Dec 6 10:36:31 2024 +0530

    CAL-526-self-review-filter

diff --git a/src/app/board/layout.tsx b/src/app/board/layout.tsx
index 61684aa..5a05b63 100644
--- a/src/app/board/layout.tsx
+++ b/src/app/board/layout.tsx
@@ -2,6 +2,7 @@ import CardFilter from "@/components/board/CardFilter";
 import DiscussionTimer from "@/components/board/DiscussionTimer";
 import ReviewSetsFilter from "@/components/board/ReviewSetsFilter";
 import SearchForPerson from "@/components/board/SearchForPerson";
+import SelfReviewFilter from "@/components/board/SelfReviewFilter";
 import BoardUserMenu from "@/components/ui/BoardUserMenu";
 import { ExceedsLogo } from "@/components/ui/Icons";
 import { Tour } from "@frigade/react";
@@ -40,6 +41,7 @@ const Layout = async ({ children }: LayoutProps) => {
           </IconButton>
           <DiscussionTimer />
           <SearchForPerson />
+          <SelfReviewFilter />
           <CardFilter />
           <BoardUserMenu />
         </div>
diff --git a/src/components/board/ICBoard.tsx b/src/components/board/ICBoard.tsx
index 485dac6..2f73695 100644
--- a/src/components/board/ICBoard.tsx
+++ b/src/components/board/ICBoard.tsx
@@ -216,12 +216,16 @@ const ICBoard = () => {
     boardReducer,
     icBoardInitialValues,
   );
+  const selfReviewFilter = useSelector(
+    (state: any) => state.boardSlice.selfReviewFilter,
+  );
   const boardUsersQuery = useGetCalibrationBoardUsers({
     select: formatICBoardData,
     params: {
       review_set_id: !!reviewSetsFilterId ? reviewSetsFilterId : null,
       review_status:
         cardColorFilter.length > 0 ? JSON.stringify(cardColorFilter) : null,
+      self_packet: selfReviewFilter ? "completed" : null,
     },
   });
 
diff --git a/src/components/board/ICCard.tsx b/src/components/board/ICCard.tsx
index 7eacc29..8520846 100644
--- a/src/components/board/ICCard.tsx
+++ b/src/components/board/ICCard.tsx
@@ -1,12 +1,13 @@
 import useAuth from "@/hooks/useAuth";
 import { setCompareProfile } from "@/store/boardSlice";
 import useSnackbar from "@/utils/snackbar";
+import VerifiedIcon from "@mui/icons-material/Verified";
 import { useSearchParams } from "next/navigation";
 import { useEffect } from "react";
 import { useDispatch, useSelector } from "react-redux";
+import AuthComponent from "../ui/AuthComponent";
 import CardSpeedDial from "./CardSpeedDial";
 import Reactions from "./Reactions";
-
 type ICCardProps = {
   user: any;
   index: number;
@@ -144,7 +145,7 @@ const ICCard = ({
       }}
       className={`ic-card border-1 ${
         isDragging ? "border-black-25 shadow-xl" : "border-black-5"
-      } rounded-xl py-2 px-3  w-full relative`}
+      } rounded-xl py-2 px-3  w-full relative min-h-[75px] `}
       // className={`ic-card border-1 ${
       //   isDragging ? "border-black-25 shadow-xl" : "border-black-5"
       // } rounded-xl py-2 px-3 bg-[#F8F7ED] w-full  ${
@@ -152,8 +153,18 @@ const ICCard = ({
       // } `}
     >
       <div className="flex items-center justify-between">
+        {user?.self_packet_created && (
+          <VerifiedIcon
+            fontSize="small"
+            className="absolute top-2 right-2 co "
+          />
+        )}
         {auth.user?.user_id === user?.user_id && (
-          <div className="absolute  top-2 right-2 text-label-small bg-[#fc1e3599] text-white p-1 rounded-lg ">
+          <div
+            className={`absolute  top-2 ${
+              user?.self_packet_created ? "right-8" : "right-2"
+            } text-[10px] bg-[#fc1e3599] text-white p-1 rounded-lg `}
+          >
             Self
           </div>
         )}
@@ -171,14 +182,16 @@ const ICCard = ({
           <CircularProgressWithLabel value={user?.percentage} />{" "}
         </div> */}
       </div>
-      <div className="flex items-center gap-2 mt-2">
-        <CardSpeedDial row={row} user={user} columnId={columnId} />
-        <Reactions
-          size="small"
-          parent="board"
-          user={{ ...user, row, columnId }}
-        />
-      </div>
+      <AuthComponent roles={["admin", "superadmin", "admin"]}>
+        <div className="flex items-center gap-2 mt-2">
+          <CardSpeedDial row={row} user={user} columnId={columnId} />
+          <Reactions
+            size="small"
+            parent="board"
+            user={{ ...user, row, columnId }}
+          />
+        </div>
+      </AuthComponent>
     </div>
   );
 };
diff --git a/src/components/board/ICColumn.tsx b/src/components/board/ICColumn.tsx
index efcb976..e624147 100644
--- a/src/components/board/ICColumn.tsx
+++ b/src/components/board/ICColumn.tsx
@@ -26,6 +26,7 @@ type ICColumnProps = {
   columnId: string;
 };
 
+import useAuth from "@/hooks/useAuth";
 import { DroppableProps } from "react-beautiful-dnd";
 
 export const StrictModeDroppable = ({ children, ...props }: DroppableProps) => {
@@ -52,6 +53,7 @@ const ICColumn = ({ column, columnId }: ICColumnProps) => {
   const [expanded, setExpanded] = useState(
     icBoardRows.map(({ title }) => title),
   );
+  const auth = useAuth();
   const [mouseHovering, setMouseHovering] = useState(false);
   const { expandDestination, isDropDisabled } = useContext(ICBoardContext);
 
@@ -209,6 +211,7 @@ const ICColumn = ({ column, columnId }: ICColumnProps) => {
                               key={user?.user_id}
                               draggableId={user?.user_id}
                               index={index}
+                              isDragDisabled={auth.user?.role?.includes("user")}
                             >
                               {(provided, snapshot) => {
                                 return (
diff --git a/src/components/board/SelfReviewFilter.tsx b/src/components/board/SelfReviewFilter.tsx
new file mode 100644
index 0000000..01c0e6f
--- /dev/null
+++ b/src/components/board/SelfReviewFilter.tsx
@@ -0,0 +1,30 @@
+"use client";
+import { setSelfReviewFilter } from "@/store/boardSlice";
+import { FormControlLabel } from "@mui/material";
+import { useDispatch, useSelector } from "react-redux";
+import Switch from "../ui/Switch";
+
+const SelfReviewFilter = () => {
+  const dispatch = useDispatch();
+  const selfReviewFilter = useSelector(
+    (state: any) => state.boardSlice.selfReviewFilter,
+  );
+  return (
+    <div className="flex items-center ml-4">
+      <FormControlLabel
+        title="Self reviewed"
+        control={
+          <Switch
+            isChecked={selfReviewFilter}
+            setIsChecked={() =>
+              dispatch(setSelfReviewFilter(!selfReviewFilter))
+            }
+          />
+        }
+        label=""
+      />
+    </div>
+  );
+};
+
+export default SelfReviewFilter;
diff --git a/src/components/board/profile/Profile.tsx b/src/components/board/profile/Profile.tsx
index f4dd39a..1204118 100644
--- a/src/components/board/profile/Profile.tsx
+++ b/src/components/board/profile/Profile.tsx
@@ -1,6 +1,7 @@
 import { AIIcon } from "@/components/ui/Icons";
 import ProfileLoader from "@/components/ui/loaders/ProfileLoader";
 
+import AuthComponent from "@/components/ui/AuthComponent";
 import {
   useAddComments,
   useDeleteComments,
@@ -150,7 +151,7 @@ const Profile = memo(({ user, index }: ProfileProps) => {
 
   const { data: feedbackData } = useFetchFeedback({
     queryKey: ["feedback"],
-    enabled: !!user?.user_id,
+    enabled: !!user?.user_id && auth?.user?.role[0] !== "user",
     params: {
       user_id: user?.user_id,
       id: user?._id,
@@ -304,7 +305,7 @@ const Profile = memo(({ user, index }: ProfileProps) => {
 
   const aiHeadlineQuery = useFetchAIHeadline({
     queryKey: ["ai-headline"],
-    enabled: !!user?.user_id,
+    enabled: !!user?.user_id && !auth.user?.role?.includes("user"),
     params: { user_id: user?.user_id, id: user?._id },
   });
 
@@ -526,6 +527,7 @@ const Profile = memo(({ user, index }: ProfileProps) => {
                     value={reviewStatus}
                     onChange={updateUserReviewStatus}
                     showLabel={true}
+                    readOnly={auth.user?.role?.includes("user")}
                   />
                 )}
               </div>
@@ -559,7 +561,11 @@ const Profile = memo(({ user, index }: ProfileProps) => {
                 position={"relative"}
                 gap={1.5}
                 className={`${
-                  isElectron ? "h-[calc(100vh-120px)]" : "h-[calc(100vh-175px)]"
+                  isElectron
+                    ? "h-[calc(100vh-120px)]"
+                    : auth?.user?.role[0] !== "user"
+                    ? "h-[calc(100vh-175px)]"
+                    : "h-[calc(100vh-110px)]"
                 } overflow-auto pb-2`}
               >
                 <div className="px-4 ">
@@ -646,17 +652,19 @@ const Profile = memo(({ user, index }: ProfileProps) => {
                         />
                       </div>
                     )}
-                    {aiHeadlineData.data && (
-                      <div
-                        style={{
-                          background:
-                            "linear-gradient(92.04deg, #4ED9EF -29.56%, #3D4580 109.4%)",
-                        }}
-                        className="p-4 flex gap-2 items-center rounded-2xl text-white text-base font-poppins font-medium  cursor-pointer  mx-4"
-                      >
-                        <AIIcon /> {aiHeadlineData?.data}
-                      </div>
-                    )}
+                    <AuthComponent roles={["admin", "superadmin", "admin"]}>
+                      {aiHeadlineData.data && (
+                        <div
+                          style={{
+                            background:
+                              "linear-gradient(92.04deg, #4ED9EF -29.56%, #3D4580 109.4%)",
+                          }}
+                          className="p-4 flex gap-2 items-center rounded-2xl text-white text-base font-poppins font-medium  cursor-pointer  mx-4"
+                        >
+                          <AIIcon /> {aiHeadlineData?.data}
+                        </div>
+                      )}
+                    </AuthComponent>
 
                     <div className="slider-container max-w-[93%] m-auto ">
                       <Slider {...sliderSettings}>
@@ -717,15 +725,18 @@ const Profile = memo(({ user, index }: ProfileProps) => {
                         performanceData={performanceCardQuery.data}
                       />
                     </div>
-                    <div className="px-4">
-                      <Feedback data={feedbackData} />
-                    </div>
-                    <AllComments
-                      allComments={allCommentList || []}
-                      cardId={user?._id}
-                      deleteCommentClick={deleteCommentClick}
-                      isLoading={addCommentMutation.isPending}
-                    />
+                    <AuthComponent roles={["admin", "superadmin", "admin"]}>
+                      <div className="px-4">
+                        <Feedback data={feedbackData} />
+                      </div>
+
+                      <AllComments
+                        allComments={allCommentList || []}
+                        cardId={user?._id}
+                        deleteCommentClick={deleteCommentClick}
+                        isLoading={addCommentMutation.isPending}
+                      />
+                    </AuthComponent>
                   </>
                 )}
                 {selectedTab === 2 && (
@@ -736,13 +747,14 @@ const Profile = memo(({ user, index }: ProfileProps) => {
                 )}
               </Stack>
             </ScrollSyncPane>
-
-            <CommentField
-              data={data}
-              cardId={user?._id}
-              addComment={addComment}
-              user={user}
-            />
+            <AuthComponent roles={["admin", "superadmin", "admin"]}>
+              <CommentField
+                data={data}
+                cardId={user?._id}
+                addComment={addComment}
+                user={user}
+              />
+            </AuthComponent>
           </div>
         </>
       )}
diff --git a/src/components/board/profile/Review.tsx b/src/components/board/profile/Review.tsx
index 5c65019..7ea117e 100644
--- a/src/components/board/profile/Review.tsx
+++ b/src/components/board/profile/Review.tsx
@@ -68,24 +68,32 @@ const Review = ({
 
   return (
     <div className="px-4">
-      {isEmptyObj(user?.review) && user?.user_id === auth?.user?.user_id && (
-        <div>
-          <p className="text-center text-2xl my-10">Review Not created</p>
-          <div className="flex justify-center">
-            <Button onClick={handleCreateReview}>Create Review</Button>
+      {isEmptyObj(user?.review) &&
+        user?.user_id === auth?.user?.user_id &&
+        reviewType === "self" && (
+          <div>
+            <p className="text-center text-2xl my-10">
+              Self Review Not created
+            </p>
+            <div className="flex justify-center">
+              <Button onClick={handleCreateReview}>Create Self Review</Button>
+            </div>
           </div>
-        </div>
-      )}
-      {isEmptyObj(user?.review) && reviewType === "self" && (
-        <p className="text-center text-onboarding-primary text-2xl my-10">
-          Review Not created
-        </p>
-      )}
+        )}
+      {isEmptyObj(user?.review) &&
+        reviewType === "self" &&
+        user?.user_id !== auth?.user?.user_id && (
+          <p className="text-center text-onboarding-primary text-2xl my-10">
+            Self Review Not created
+          </p>
+        )}
       {isEmptyObj(user?.review) && reviewType === "manager" && (
         <div>
-          <p className="text-center text-2xl my-10">Review Not created</p>
+          <p className="text-center text-2xl my-10">
+            Manager Review Not created
+          </p>
           <div className="flex justify-center">
-            <Button onClick={handleCreateReview}>Create Review</Button>
+            <Button onClick={handleCreateReview}>Create Manager Review</Button>
           </div>
         </div>
       )}
diff --git a/src/components/board/profile/Status.tsx b/src/components/board/profile/Status.tsx
index 8829af9..a1ef4f3 100644
--- a/src/components/board/profile/Status.tsx
+++ b/src/components/board/profile/Status.tsx
@@ -5,8 +5,8 @@ import {
   useFetchDiscussionStatus,
   useUpdateDiscussionStatus,
 } from "@/hooks/useApi";
+import useAuth from "@/hooks/useAuth";
 import { CircularProgress } from "@mui/material";
-import { useEffect, useState } from "react";
 
 type StatusProps = {
   user: any;
@@ -20,14 +20,8 @@ type SwitchProps = {
   type: string;
 };
 
-const status_option = {
-  discussion: "discussion",
-  promotion: "promotion",
-};
-
 const Status = ({ user, reviewSetId }: StatusProps) => {
   const { user_id: userId, _id: id } = user;
-  const [total, seTotal] = useState(0);
 
   const discussionStatusQuery = useFetchDiscussionStatus({
     queryKey: [userId],
@@ -42,19 +36,10 @@ const Status = ({ user, reviewSetId }: StatusProps) => {
   const discussion_status = data?.items?.discussion_status;
   const promotion_status = data?.items?.promotion_status;
 
-  useEffect(() => {
-    seTotal(0);
-    if (promotion_status === "Promote Now") {
-      seTotal((ini) => ini + 50);
-    }
-    if (discussion_status === "Completed") {
-      seTotal((ini) => ini + 50);
-    }
-  }, [discussion_status, promotion_status]);
-
   const Switch = ({ status, yes = "Yes", no = "No", type }: SwitchProps) => {
     const yesStatusMutation = useUpdateDiscussionStatus();
     const noStatusMutation = useUpdateDiscussionStatus();
+    const auth = useAuth();
 
     const handleYesStatusClicked = (statusVal: string) => {
       const payload = {
@@ -90,6 +75,7 @@ const Status = ({ user, reviewSetId }: StatusProps) => {
               status === yes && "bg-[#3D5A80] text-white"
             }`}
             onClick={() => handleYesStatusClicked(yes)}
+            disabled={auth.user?.role?.includes("user")}
           >
             {yesStatusMutation.isPending || noStatusMutation.isPending ? (
               <CircularProgress size={20} sx={{ color: "#000" }} />
@@ -102,6 +88,7 @@ const Status = ({ user, reviewSetId }: StatusProps) => {
               status === no ? "bg-[#3D5A80] text-white" : "bg-white "
             }`}
             onClick={() => handleNoStatusClicked(no)}
+            disabled={auth.user?.role?.includes("user")}
           >
             {yesStatusMutation.isPending || noStatusMutation.isPending ? (
               <CircularProgress size={20} sx={{ color: "#000" }} />
diff --git a/src/components/ui/ColorSelect.tsx b/src/components/ui/ColorSelect.tsx
index 9e2a4b8..1fd5228 100644
--- a/src/components/ui/ColorSelect.tsx
+++ b/src/components/ui/ColorSelect.tsx
@@ -11,6 +11,7 @@ interface ColorSelectProps {
   onChange: (color: any) => void;
   showLabel?: boolean;
   multiselect?: boolean;
+  readOnly?: boolean;
 }
 
 const ColorSelect = ({
@@ -18,6 +19,7 @@ const ColorSelect = ({
   onChange,
   showLabel = false,
   multiselect = false,
+  readOnly = false,
 }: ColorSelectProps) => {
   const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);
 
@@ -35,7 +37,9 @@ const ColorSelect = ({
     <>
       <div
         id={"review-status-filter"}
-        className={`cursor-pointer  border-black-5  text-primary flex w-fit items-center  px-2 py-[2px]            
+        className={`${
+          !readOnly && "cursor-pointer "
+        } border-black-5  text-primary flex w-fit items-center  px-2 py-[2px]            
        ${multiselect && value.length < 4 && value.length > 0 && "pl-4"} ${
           showLabel
             ? !open
@@ -45,7 +49,7 @@ const ColorSelect = ({
             ? "bg-[#FFFFFF99] border-half rounded-full hover:bg-[#FFFFFFCC] "
             : "bg-white-60 border-half rounded-full hover:bg-[#FFFFFFCC] "
         } `}
-        onClick={handleClick}
+        onClick={!readOnly ? handleClick : () => {}}
         aria-describedby={id}
       >
         {!value && !multiselect ? (
@@ -77,7 +81,9 @@ const ColorSelect = ({
             )}
           </div>
         )}
-        <ArrowDropDownIcon className={open ? "rotate-180" : ""} />
+        {!readOnly && (
+          <ArrowDropDownIcon className={open ? "rotate-180" : ""} />
+        )}
       </div>
       <Popover
         id={id}
diff --git a/src/store/boardSlice.ts b/src/store/boardSlice.ts
index 38f7272..24678d3 100644
--- a/src/store/boardSlice.ts
+++ b/src/store/boardSlice.ts
@@ -4,6 +4,7 @@ const initialState = {
   compareProfile: [],
   reviewSetsFilterId: "",
   cardColorFilter: "",
+  selfReviewFilter: false,
 };
 
 export const boardSlice = createSlice({
@@ -19,6 +20,9 @@ export const boardSlice = createSlice({
     setCardColorFilter: (state, action) => {
       state.cardColorFilter = action.payload;
     },
+    setSelfReviewFilter: (state, action) => {
+      state.selfReviewFilter = action.payload;
+    },
     setMinimizeProfile: (state: any, action) => {
       state.compareProfile = [...state.compareProfile].map((u) =>
         u?._id === action?.payload?._id
@@ -34,6 +38,7 @@ export const {
   setReviewSetsFilterId,
   setCardColorFilter,
   setMinimizeProfile,
+  setSelfReviewFilter,
 } = boardSlice.actions;
 
 export default boardSlice.reducer;
diff --git a/src/utils/FrigadeProvider.tsx b/src/utils/FrigadeProvider.tsx
index 1d00ebd..aeabad7 100644
--- a/src/utils/FrigadeProvider.tsx
+++ b/src/utils/FrigadeProvider.tsx
@@ -1,4 +1,5 @@
 "use client";
+import useAuth from "@/hooks/useAuth";
 import { useUser } from "@auth0/nextjs-auth0/client";
 import * as Frigade from "@frigade/react";
 import { ReactNode } from "react";
@@ -6,10 +7,11 @@ import { FRIGADE_PUBLIC_KEY } from "./env";
 
 const FrigadeProvider = ({ children }: { children: ReactNode }) => {
   const { user } = useUser();
+  const auth = useAuth();
   return (
     <Frigade.Provider
       apiKey={FRIGADE_PUBLIC_KEY as string}
-      userId={user?.email as any}
+      userId={(user?.email || auth.user?.email) as any}
       theme={{
         colors: {
           primary: {
